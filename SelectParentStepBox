import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;

import javax.swing.*;

public class SelectParentStepBox extends JDialog implements ActionListener {

    /**
     * This class creates a GUI for the user to interact with in
     * order to type in a new term and its definition to add
     * to their usecase project.
     *
     * @author Wesley Krug, Gabriel Steponovich,
     *         Michael Brecker, Halston Raddatz
     * @version Winter 2015
     */

    /**
     * serial Version.
     */
    private static final long serialVersionUID = 1L;

    /**
     * OK button.
     */
    private JButton oK;

    /**
     * Cancel button.
     */
    private JButton cancel;


    private JComboBox<PrimaryFlowStep> comboBox;

    /**
     * Creates a Vector for the Usecase' Primary Flow Steps
     */
    private Vector<PrimaryFlowStep> pFlowSteps;

    /**
     * Creates an object for a flow step.
     */
    private PrimaryFlowStep parentFlowStep;

    private AlternateFlowStep altFlowStep;

    private JTextField titleTxt;

    private boolean flag = false;

    /**
     * Constructor to set up GUI for user interaction.
     */
    public SelectParentStepBox(Vector<PrimaryFlowStep> pFlow) {
        setModalityType(ModalityType.APPLICATION_MODAL);
        setLocationRelativeTo(null);
        setTitle("Select Parent Primary Flow Step");
        setSize(474, 177);
        JPanel panel = new JPanel();
        panel.setBounds(50, 11, 384, 41);
        panel.setLayout(new GridLayout(2, 1));
        
        

        pFlowSteps = new Vector<PrimaryFlowStep>(pFlow);

        createBox(true);
        getContentPane().setLayout(null);
        panel.add(comboBox, BorderLayout.NORTH);
        panel.add(new JLabel(""));
        getContentPane().add(panel);
        
        
        
        JLabel lblNewLabel = new JLabel("New Step:");
        lblNewLabel.setBounds(195, 37, 200, 50);
        getContentPane().add(lblNewLabel);
        cancel = new JButton("");
        cancel.setIcon(new ImageIcon(SelectParentStepBox.class.getResource("/resources/cancel.png")));
        cancel.setBounds(257, 108, 83, 23);
        getContentPane().add(cancel);
        
        
                oK = new JButton("");
                oK.setIcon(new ImageIcon(SelectParentStepBox.class.getResource("/resources/ok.png")));
                oK.setBounds(133, 108, 83, 23);
                getContentPane().add(oK);
                
                        titleTxt = new JTextField("", 50);
                        titleTxt.setBounds(50, 71, 384, 26);
                        getContentPane().add(titleTxt);
                        titleTxt.setForeground(Color.BLACK);
                oK.addActionListener(this);
        cancel.addActionListener(this);

        parentFlowStep = new PrimaryFlowStep();

        setVisible(true);
    }


    public void createBox(boolean flag) {
        MyComboBoxModel myBox = new MyComboBoxModel(pFlowSteps);
        if (flag) {
            comboBox = new JComboBox<PrimaryFlowStep>(myBox);
        }
        comboBox.setModel(myBox);
    }
    /**
     * The action performed method for created a new term in the
     * glossary.
     *
     * @param e is an ActionEvent
     */
    public final void actionPerformed(final ActionEvent e) {
        if (e.getSource() == oK) {
            try {
                for (int i = 0; i < pFlowSteps.size(); i++) {
                    if (pFlowSteps.get(i) == (comboBox.getSelectedItem())) {
                        parentFlowStep = pFlowSteps.get(i);
                        altFlowStep = new AlternateFlowStep(titleTxt.getText(), pFlowSteps.get(i));
                        pFlowSteps.get(i).incrementNumAltFlows();
                        i = pFlowSteps.size()+1;
                    }
                }

                AddAltFlowHub addAltFlowHub = new AddAltFlowHub(altFlowStep);
                addAltFlowHub.setModalityType(ModalityType.APPLICATION_MODAL);
                altFlowStep = addAltFlowHub.getAltFlowStep();
                flag = addAltFlowHub.getFlag();
                dispose();
            } catch (Exception e1) {
                e1.printStackTrace();
            }
        }
        /** exits the pop-up box **/
        if (e.getSource() == cancel) {
            for (int i = 0; i < pFlowSteps.size(); i++) {
                if (pFlowSteps.get(i) == (comboBox.getSelectedItem())) {
                    parentFlowStep = pFlowSteps.get(i);
                }
            }
            parentFlowStep.decrementNumAltFlows();
            flag = false;
            dispose();
        }
    }

    public AlternateFlowStep getaFlowStep() {
        return altFlowStep;
    }

    public boolean getFlag() {
        return flag;
    }
}
